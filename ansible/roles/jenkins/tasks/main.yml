- name: Check if jenkins is installed
  command: dpkg-query -W jenkins
  register: jenkins_check_deb
  failed_when: jenkins_check_deb.rc > 1
  changed_when: jenkins_check_deb.rc == 1

- name: Get Jenkins file
  get_url:
    url: http://pkg.jenkins-ci.org/debian-stable/binary/jenkins_2.7.2_all.deb
    dest: /tmp/jenkins_2.7.2_all.deb
  when: jenkins_check_deb.rc == 1

- name: Install Jenkins
  apt: deb="/tmp/jenkins_2.7.2_all.deb"
  sudo: true
  when: jenkins_check_deb.rc == 1

- name: Clone the automation-recepies git project
  git:
    repo: https://github.com/luiselizondo/automation-recipes.git
    dest: /tmp/automation-recipes

- name: Install docker-py using pip
  pip:
    name: docker-py

- name: Append the user jenkins to the group docker
  user:
    name: jenkins
    groups: docker
    append: yes

- name: Creates directory /opt/app/jenkins/docker
  file:
    path: /opt/app/jenkins/docker
    state: directory

- name: Edit the /etc/default/docker file
  lineinfile:
    dest: /etc/default/docker
    line: "DOCKER_OPTS='-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock --restart=false -g /opt/app/jenkins/docker -G jenkins'"

- name: Restart docker
  service:
    name: docker
    state: restarted

- name: Print Jenkins password
  command: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkinsPassword

- debug: msg="{{ jenkinsPassword.stdout_lines }}"

- name: Restart jenkins
  service:
    name: jenkins
    state: restarted

- name: Build the Docker runner image
  docker_image:
    path: /tmp/automation-recipes
    name: local/runner
    tag: latest

- name: Restart docker
  service:
    name: docker
    state: restarted

- name: Create first docker slave
  docker_container:
    name: runner-first
    state: started
    image: local/runner
