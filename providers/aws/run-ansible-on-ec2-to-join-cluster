#!/bin/bash


TAGS=""
if [ ! -z "${TASKS}" ]; then
  TAGS=${TASKS}
fi

set -x
set -u
set -e

CLUSTER_NAME=$1
PRIVATE_KEY_NAME=$2
USERNAME=$3
HOSTS_TO_CONFIGURE=$4
AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

function errorTrap {
  status=$?
  echo "ERROR: Command exited with status $status."
}

HOSTS_FILE=`mktemp`
function runAnsibleOnHosts() {
  hosts=$1

  echo "[aws_ecs_cluster]" > $HOSTS_FILE
  for HOST in $hosts
  do
    echo $HOST >> $HOSTS_FILE
  done
}

runAnsibleOnHosts "${HOSTS_TO_CONFIGURE}"

if [ -z "${TAGS}" ]; then
  echo "Tags is empty, executing default command"

  echo "Installing to: $(cat $HOSTS_FILE)"
  ansible-playbook \
  --user=${USERNAME} \
  --private-key=/keys/${PRIVATE_KEY_NAME} \
  --extra-vars="cluster_name=${CLUSTER_NAME}" \
  --verbose \
  --become \
  -c paramiko \
  -t ${TASKS} \
  --inventory-file=$HOSTS_FILE /opt/ansible/aws-ecs-playbook.yml
else
  echo "Installing to: $(cat $HOSTS_FILE)"
  ansible-playbook \
  --user=${USERNAME} \
  --private-key=/keys/${PRIVATE_KEY_NAME} \
  --extra-vars="cluster_name=${CLUSTER_NAME} region=${AWS_DEFAULT_REGION}" \
  --verbose \
  --become \
  -c paramiko \
  --inventory-file=$HOSTS_FILE /opt/ansible/aws-ecs-playbook.yml
fi
